<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[draptik]]></title>
  <link href="http://draptik.github.io/atom.xml" rel="self"/>
  <link href="http://draptik.github.io/"/>
  <updated>2013-07-14T15:58:53+02:00</updated>
  <id>http://draptik.github.io/</id>
  <author>
    <name><![CDATA[Patrick Drechsler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJS example using a Java RESTful web service]]></title>
    <link href="http://draptik.github.io/blog/2013/07/13/angularjs-example-using-a-java-restful-web-service/"/>
    <updated>2013-07-13T20:12:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/07/13/angularjs-example-using-a-java-restful-web-service</id>
    <content type="html"><![CDATA[<p><a href="http://angularjs.org/">AngularJS</a> is the current MVV-Whatever JavaScript framework by Google.
Among other things, it provides bidirectional data binding.</p>

<p>Although I&rsquo;m neither a Java nor a JavaScript expert, I choose the following scenario for my &lsquo;Hello-World&rsquo; example:</p>

<ol>
<li><p>Java backend provides a RESTful web service.</p></li>
<li><p>AngularJS consumes the web service.</p></li>
</ol>


<p>That&rsquo;s it.</p>

<h1>Project structure</h1>

<p>I intentionally put the backend and frontend code in the same project to simplify the example. In a real project you probably want to have seperate projects for front- and backend.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>+---------------------------------------------------+
</span><span class='line'>| demo project                                      |
</span><span class='line'>|                                                   |
</span><span class='line'>| +----------------+              +---------------+ |
</span><span class='line'>| | backend <span class="o">(</span>Java<span class="o">)</span> | &lt; -<span class="o">(</span>REST<span class="o">)</span>- &gt; | frontend <span class="o">(</span>JS<span class="o">)</span> | |
</span><span class='line'>| +----------------+              +---------------+ |
</span><span class='line'>|                                                   |
</span><span class='line'>+---------------------------------------------------+
</span></code></pre></td></tr></table></div></figure>


<p>Since the backend is Java based, I used a Maven default structure (<code>maven-archetype-site-simple</code>):</p>

<figure class='code'><figcaption><span>project structure</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>├── _documentation
</span><span class='line'>│   └── readme.txt
</span><span class='line'>├── ngdemo.iml
</span><span class='line'>├── pom.xml
</span><span class='line'>└── src
</span><span class='line'>    └── main
</span><span class='line'>        ├── java
</span><span class='line'>        │   └── ngdemo
</span><span class='line'>        │       ├── domain
</span><span class='line'>        │       │   └── User.java
</span><span class='line'>        │       ├── rest
</span><span class='line'>        │       │   └── UserRestService.java
</span><span class='line'>        │       └── service
</span><span class='line'>        │           └── UserService.java
</span><span class='line'>        └── webapp
</span><span class='line'>            ├── css
</span><span class='line'>            │   └── app.css
</span><span class='line'>            ├── img
</span><span class='line'>            ├── index-async.html
</span><span class='line'>            ├── index.html
</span><span class='line'>            ├── index.jsp
</span><span class='line'>            ├── js
</span><span class='line'>            │   ├── app.js
</span><span class='line'>            │   ├── controllers.js
</span><span class='line'>            │   ├── directives.js
</span><span class='line'>            │   ├── filters.js
</span><span class='line'>            │   └── services.js
</span><span class='line'>            ├── lib
</span><span class='line'>            │   └── angular
</span><span class='line'>            │       ├── angular-cookies.js
</span><span class='line'>            │       ├── angular-cookies.min.js
</span><span class='line'>            │       ├── angular.js
</span><span class='line'>            │       ├── angular-loader.js
</span><span class='line'>            │       ├── angular-loader.min.js
</span><span class='line'>            │       ├── angular.min.js
</span><span class='line'>            │       ├── angular-resource.js
</span><span class='line'>            │       ├── angular-resource.min.js
</span><span class='line'>            │       ├── angular-sanitize.js
</span><span class='line'>            │       ├── angular-sanitize.min.js
</span><span class='line'>            │       └── version.txt
</span><span class='line'>            ├── partials
</span><span class='line'>            │   └── partial1.html
</span><span class='line'>            └── WEB-INF
</span><span class='line'>                └── web.xml
</span></code></pre></td></tr></table></div></figure>


<p><code>src/main/java</code> is the backend.</p>

<p><code>src/main/webapp/js</code> is the frontend.</p>

<p><code>src/main/webapp/</code> also includes a copy of angular-seed.</p>

<h1>RESTful web service (backend)</h1>

<p><a href="https://jersey.java.net/">Jersey</a> is the Java reference implementation for providing REST.</p>

<p>Install the following dependencies in your <code>pom.xml</code>:</p>

<figure class='code'><figcaption><span>pom.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- .. --&gt;</span>
</span><span class='line'><span class="c">&lt;!-- RESTful web service: Jersey --&gt;</span>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>com.sun.jersey<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>jersey-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.17.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>com.sun.jersey<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>jersey-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.17.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>com.sun.jersey<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>jersey-json<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.17.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="c">&lt;!-- .. --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add the following servlet snippet to your <code>web.xml</code>:</p>

<figure class='code'><figcaption><span>web.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- .. --&gt;</span>
</span><span class='line'><span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet</span><span class="na">-name</span><span class="nt">&gt;</span>jersey-serlvet<span class="err">&lt;</span>/servlet-name&gt;
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;servlet</span><span class="na">-class</span><span class="nt">&gt;</span>
</span><span class='line'>        com.sun.jersey.spi.container.servlet.ServletContainer
</span><span class='line'>    <span class="err">&lt;</span>/servlet-class&gt;
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;init</span><span class="na">-param</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span><span class="na">-name</span><span class="nt">&gt;</span>com.sun.jersey.config.property.packages<span class="err">&lt;</span>/param-name&gt;
</span><span class='line'>        <span class="nt">&lt;param</span><span class="na">-value</span><span class="nt">&gt;</span>ngdemo.rest<span class="err">&lt;</span>/param-value&gt;
</span><span class='line'>    <span class="err">&lt;</span>/init-param&gt;
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;init</span><span class="na">-param</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span><span class="na">-name</span><span class="nt">&gt;</span>com.sun.jersey.api.json.POJOMappingFeature<span class="err">&lt;</span>/param-name&gt;
</span><span class='line'>        <span class="nt">&lt;param</span><span class="na">-value</span><span class="nt">&gt;</span>true<span class="err">&lt;</span>/param-value&gt;
</span><span class='line'>    <span class="err">&lt;</span>/init-param&gt;
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;load</span><span class="na">-on-startup</span><span class="nt">&gt;</span>1<span class="err">&lt;</span>/load-on-startup&gt;
</span><span class='line'><span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;servlet</span><span class="na">-mapping</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet</span><span class="na">-name</span><span class="nt">&gt;</span>jersey-serlvet<span class="err">&lt;</span>/servlet-name&gt;
</span><span class='line'>    <span class="nt">&lt;url</span><span class="na">-pattern</span><span class="nt">&gt;</span>/rest/*<span class="err">&lt;</span>/url-pattern&gt;
</span><span class='line'><span class="err">&lt;</span>/servlet-mapping&gt;
</span><span class='line'><span class="c">&lt;!-- .. --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enough configuration for now: Create a simple <code>User</code> object&hellip;</p>

<figure class='code'><figcaption><span>User.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">ngdemo</span><span class="o">.</span><span class="na">domain</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.bind.annotation.XmlRootElement</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@XmlRootElement</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">firstName</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getFirstName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">firstName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFirstName</span><span class="o">(</span><span class="n">String</span> <span class="n">firstName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">firstName</span> <span class="o">=</span> <span class="n">firstName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getLastName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLastName</span><span class="o">(</span><span class="n">String</span> <span class="n">lastName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">lastName</span> <span class="o">=</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;and a service class&hellip;</p>

<figure class='code'><figcaption><span>UserService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">ngdemo</span><span class="o">.</span><span class="na">service</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">ngdemo.domain.User</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">User</span> <span class="nf">getDefaultUser</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="n">User</span><span class="o">();</span>
</span><span class='line'>        <span class="n">user</span><span class="o">.</span><span class="na">setFirstName</span><span class="o">(</span><span class="s">&quot;JonFromREST&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">user</span><span class="o">.</span><span class="na">setLastName</span><span class="o">(</span><span class="s">&quot;DoeFromREST&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">user</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;and finally the RESTful Service&hellip;:</p>

<figure class='code'><figcaption><span>UserRestService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">ngdemo</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">ngdemo.domain.User</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ngdemo.service.UserService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ngdemo.service.UserServiceImpl</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.MediaType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/users&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserRestService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@GET</span>
</span><span class='line'>    <span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">User</span> <span class="nf">getDefaultUserInJSON</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">UserService</span> <span class="n">userService</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UserServiceImpl</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">userService</span><span class="o">.</span><span class="na">getDefaultUser</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Converting the <code>User</code> object to JSON via <code>@Produces(MediaType.APPLICATION_JSON)</code> requires jersey-json in <code>web.xml</code> (<code>POJOMappingFeature</code>).</p>

<h1>Consuming web service from AngularJS (frontend)</h1>

<p>Don&rsquo;t forget to add <code>angular-resources.js</code> to your <code>index.html</code>&hellip;</p>

<p>Consuming the web service:</p>

<figure class='code'><figcaption><span>services.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">services</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;ngdemo.services&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;ngResource&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">services</span><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;UserFactory&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">$resource</span><span class="p">(</span><span class="s1">&#39;/ngdemo/rest/users&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">query</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;GET&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">params</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>            <span class="nx">isArray</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Usage in controller:</p>

<figure class='code'><figcaption><span>controller.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;ngdemo.controllers&#39;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MyCtrl1&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="s1">&#39;UserFactory&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">UserFactory</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">UserFactory</span><span class="p">.</span><span class="nx">get</span><span class="p">({},</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">userFactory</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$scope</span><span class="p">.</span><span class="nx">firstname</span> <span class="o">=</span> <span class="nx">userFactory</span><span class="p">.</span><span class="nx">firstName</span><span class="p">;</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Usage in view:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div>
</span><span class='line'>    &lt;p>
</span><span class='line'>        Result from RESTful service is: {{ firstname }}
</span><span class='line'>    &lt;/p>
</span><span class='line'>&lt;/div></span></code></pre></td></tr></table></div></figure>


<p>Et voila:</p>

<p><img src="http://draptik.github.io/images/posts/angular/browser_screenshot.png"></p>

<p>You can download a copy of this project here: <a href="https://github.com/draptik/angulardemorestful">https://github.com/draptik/angulardemorestful</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Listing environment variables (Linux)]]></title>
    <link href="http://draptik.github.io/blog/2013/07/05/listing-environment-variables-linux/"/>
    <updated>2013-07-05T23:33:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/07/05/listing-environment-variables-linux</id>
    <content type="html"><![CDATA[<p>Just a note to self: Get a list of all linux environment variables and their values using the <code>export</code> command.</p>

<p>Here is an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pi@rpidev ~ <span class="nv">$ </span><span class="nb">export</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">HOME</span><span class="o">=</span><span class="s2">&quot;/home/pi&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;/opt/java/jdk1.7.0_25&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">LANG</span><span class="o">=</span><span class="s2">&quot;en_GB.UTF-8&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">LOGNAME</span><span class="o">=</span><span class="s2">&quot;pi&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">LS_COLORS</span><span class="o">=</span><span class="s2">&quot;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">MAIL</span><span class="o">=</span><span class="s2">&quot;/var/mail/pi&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">OLDPWD</span><span class="o">=</span><span class="s2">&quot;/home/pi/myinstall_notes&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/opt/java/jdk1.7.0_25/bin&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">PWD</span><span class="o">=</span><span class="s2">&quot;/home/pi&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">SHELL</span><span class="o">=</span><span class="s2">&quot;/bin/bash&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">SHLVL</span><span class="o">=</span><span class="s2">&quot;1&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">SSH_CLIENT</span><span class="o">=</span><span class="s2">&quot;192.168.179.32 39295 22&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">SSH_CONNECTION</span><span class="o">=</span><span class="s2">&quot;192.168.179.32 39295 192.168.179.148 22&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">SSH_TTY</span><span class="o">=</span><span class="s2">&quot;/dev/pts/0&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">TERM</span><span class="o">=</span><span class="s2">&quot;xterm&quot;</span>
</span><span class='line'><span class="nb">declare</span> -x <span class="nv">USER</span><span class="o">=</span><span class="s2">&quot;pi&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ReorderList demo for AjaxControlToolkit]]></title>
    <link href="http://draptik.github.io/blog/2013/05/30/reorderlist-demo-for-ajaxcontroltoolkit/"/>
    <updated>2013-05-30T15:55:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/05/30/reorderlist-demo-for-ajaxcontroltoolkit</id>
    <content type="html"><![CDATA[<p><a href="http://www.asp.net/ajaxLibrary/AjaxControlToolkitSampleSite/Default.aspx">AjaxControlToolkit&rsquo;s</a>
<a href="http://www.asp.net/ajaxLibrary/AjaxControlToolkitSampleSite/ReorderList/ReorderList.aspx">ReorderList</a>
provides drag and drop functionality within a list.</p>

<figure class='code'><figcaption><span>ReorderListDemo.aspx</span><a href='https://github.com/draptik/actdemos/blob/master/AjaxControlToolkitDemos/AjaxControlToolkitDemos/Pages/ReorderListDemo.aspx'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;CssReorderList&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- ClientMode=&quot;AutoID&quot; is required for certain versions of AjaxControlToolkit  --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ajaxToolkit:ReorderList</span> <span class="na">ID=</span><span class="s">&quot;MyReorderList&quot;</span> <span class="na">runat=</span><span class="s">&quot;server&quot;</span>
</span><span class='line'>                             <span class="na">DataKeyField=</span><span class="s">&quot;MyId&quot;</span>
</span><span class='line'>                             <span class="na">SortOrderField=</span><span class="s">&quot;MyPosition&quot;</span>
</span><span class='line'>                             <span class="na">PostBackOnReorder=</span><span class="s">&quot;False&quot;</span>
</span><span class='line'>                             <span class="na">ClientIDMode=</span><span class="s">&quot;AutoID&quot;</span>
</span><span class='line'>                             <span class="na">DragHandleAlignment=</span><span class="s">&quot;Left&quot;</span>
</span><span class='line'>                             <span class="na">ItemInsertLocation=</span><span class="s">&quot;Beginning&quot;</span>
</span><span class='line'>                             <span class="na">AllowReorder=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ItemTemplate&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;background-color: yellow;&quot;</span> <span class="na">class=</span><span class="s">&quot;CssItemArea&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;asp:HiddenField</span> <span class="na">runat=</span><span class="s">&quot;server&quot;</span> <span class="na">ID=</span><span class="s">&quot;hdfMyId&quot;</span>
</span><span class='line'>                  <span class="na">Value=</span><span class="s">&quot;&lt;%# ((DummyViewModel)Container.DataItem).MyId %&gt;&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;asp:Label</span> <span class="na">runat=</span><span class="s">&quot;server&quot;</span> <span class="na">ID=</span><span class="s">&quot;lblName&quot;</span>
</span><span class='line'>                  <span class="na">Text=</span><span class="s">&quot;&lt;%# ((DummyViewModel)Container.DataItem).MyName %&gt;&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;asp:Label</span> <span class="na">runat=</span><span class="s">&quot;server&quot;</span> <span class="na">ID=</span><span class="s">&quot;lblPosition&quot;</span>
</span><span class='line'>                  <span class="na">Text=</span><span class="s">&quot;&lt;%# ((DummyViewModel)Container.DataItem).MyPosition %&gt;&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/ItemTemplate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;DragHandleTemplate&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;CssDragHandle&quot;</span><span class="nt">&gt;&lt;strong&gt;</span>DRAG ME<span class="nt">&lt;/strong&gt;&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/DragHandleTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ajaxToolkit:ReorderList&gt;</span>
</span><span class='line'><span class="nt">&lt;div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve placed a working example project on <a href="https://github.com/draptik/actdemos">github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a network printer using Raspberry Pi]]></title>
    <link href="http://draptik.github.io/blog/2013/05/30/setting-up-a-network-printer-using-raspberry-pi/"/>
    <updated>2013-05-30T08:30:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/05/30/setting-up-a-network-printer-using-raspberry-pi</id>
    <content type="html"><![CDATA[<p><a href="http://www.lynsayshepherd.com/blog/?p=1340">This post by Lynsay</a> describes in detail how to convert a non-network printer into a network printer.</p>

<p>You will have to install CUPS and SAMBA on your Raspberry Pi.</p>

<p>Once your done you can access the printer from any OS (windows, linux, mac) within your network.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RPi/XBMC: Keeping content in sync]]></title>
    <link href="http://draptik.github.io/blog/2013/05/25/rpi-xbmc-sync/"/>
    <updated>2013-05-25T19:24:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/05/25/rpi-xbmc-sync</id>
    <content type="html"><![CDATA[<p>If you have multiple <a href="http://www.raspberrypi.org/">Rasperry Pi</a>/<a href="http://xbmc.org/">XBMC</a> clients and want to</p>

<ul>
<li>keep your &ldquo;history&rdquo; in sync (watch a movie in room1, stop, start the same movie in room2 and resume)</li>
<li>do not want to individually update every RPi/XBMC client if the content of your data storage changes</li>
</ul>


<p>then this post might be for you.</p>

<p><a href="http://wiki.xbmc.org/index.php?title=HOW-TO:Share_libraries_using_MySQL">The XBMC Wiki decribes this in detail</a>.
This post just describes an actual implementation using Raspberry Pi clients and server.</p>

<p>To do this you will need a MySQL database on a machine in your network which is always accessible from your Raspberry Pi/XBMC clients (called <code>RPI-Client</code> from now on).
Since I didn&rsquo;t have a machine like this in my network I decided to buy another RPi for this purpose (referred to as <code>RPi-Server</code> from now on).</p>

<p><strong>The content of the MySQL database only contains metadata for each entry, not the actual data</strong> (information like (a) the file path and (b) the last timestamp within the movie you were watching).</p>

<p>Here is a diagram showing my network setup for two Rasperry Pi clients running XBMC:</p>

<figure class='code'><figcaption><span>network</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>+---+
</span><span class='line'>|   |   |---------------------------------|
</span><span class='line'>|   |---| RPi-Client-1 <span class="o">(</span>XBMC living room<span class="o">)</span> |
</span><span class='line'>|   |   |---------------------------------|
</span><span class='line'>|   |
</span><span class='line'>| L |   |------------------------------|
</span><span class='line'>| A |---| RPi-Client-2 <span class="o">(</span>XBMC bed room<span class="o">)</span> |
</span><span class='line'>| N |   |------------------------------|
</span><span class='line'>|   |
</span><span class='line'>|   |   |-----------------------|
</span><span class='line'>|   |---| RPi-Server <span class="o">(</span>Raspbian<span class="o">)</span> |
</span><span class='line'>|   |   |-----------------------|
</span><span class='line'>|   |
</span><span class='line'>|   |   |-----|
</span><span class='line'>|   |---| NAS |
</span><span class='line'>|   |   |-----|
</span><span class='line'>+---+
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>The clients <code>RPi-Client-X</code> are default <a href="http://openelec.tv/">OpenELEC</a> installations.</li>
<li>The server <code>RPi-Server</code> is a default <a href="http://www.raspbian.org/">Raspbian</a> installation.</li>
</ul>


<h2>RPi-Server Setup</h2>

<p>The <code>RPi-Server</code> has to provide a MySQL database which can be accessed from each <code>RPi-Client-X</code>.
Just follow the <a href="http://wiki.xbmc.org/index.php?title=HOW-TO:Share_libraries_using_MySQL/Setting_up_MySQL">simple setup instructions on the XBMC-Wiki</a>.</p>

<p>This is how you can check the status of your MySQL server:</p>

<p><code>
rpi-server$ sudo /etc/init.d/mysql status
</code></p>

<h2>RPi-Client Setup</h2>

<p>Each <code>RPi-Client-X</code> needs to be configured to use the <code>RPi-Server</code> database.</p>

<p><code>RPi-Server: 192.168.179.36</code></p>

<figure class='code'><figcaption><span>advancedsettings.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;advancedsettings&gt;</span>
</span><span class='line'>  <span class="nt">&lt;videodatabase&gt;</span>
</span><span class='line'>        <span class="nt">&lt;type&gt;</span>mysql<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;host&gt;</span>192.168.179.36<span class="nt">&lt;/host&gt;</span>
</span><span class='line'>        <span class="nt">&lt;port&gt;</span>3306<span class="nt">&lt;/port&gt;</span>
</span><span class='line'>        <span class="nt">&lt;user&gt;</span>xbmc<span class="nt">&lt;/user&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pass&gt;</span>xbmc<span class="nt">&lt;/pass&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/videodatabase&gt;</span>
</span><span class='line'>  <span class="nt">&lt;musicdatabase&gt;</span>
</span><span class='line'>        <span class="nt">&lt;type&gt;</span>mysql<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;host&gt;</span>192.168.179.36<span class="nt">&lt;/host&gt;</span>
</span><span class='line'>        <span class="nt">&lt;port&gt;</span>3306<span class="nt">&lt;/port&gt;</span>
</span><span class='line'>        <span class="nt">&lt;user&gt;</span>xbmc<span class="nt">&lt;/user&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pass&gt;</span>xbmc<span class="nt">&lt;/pass&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/musicdatabase&gt;</span>
</span><span class='line'><span class="nt">&lt;/advancedsettings&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note:
The location of the file <code>advancedsettings.xml</code> might very depending on your XBMC installation.
For OpenELEC the file is located at <code>/storage/.xbmc/userdata/advancedsettings.xml</code>.</p>

<h2>XBMC Library Update (optional)</h2>

<p>Once the above setup works you can install the <a href="http://wiki.xbmc.org/index.php?title=Add-on:XBMC_Library_Auto_Update">XBMC Addon:Library Auto Update</a>.
This plugin provides a GUI to setup a cron job to sync the content your <code>RPi-Client-X</code> has acces to (i.e. your NAS) with your MySQL database.
Just install it on <em>one</em> of your <code>RPi-Client-X</code>.</p>

<h2>MySQL Backup (optional)</h2>

<p>A bit overkill, but I also backup the MySQL Database from the <code>RPi-Server</code> to my NAS using <a href="http://sourceforge.net/projects/automysqlbackup/">automysqlbackup</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mapping missing context menu in OpenELEC with Remote Control HAMA MCE]]></title>
    <link href="http://draptik.github.io/blog/2013/05/24/mapping-missing-context-menu-in-openelec-with-remote-control-hama-mce/"/>
    <updated>2013-05-24T21:27:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/05/24/mapping-missing-context-menu-in-openelec-with-remote-control-hama-mce</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://draptik.github.io/images/posts/Hama_mce_remote.jpg" width="150" height="150" title="Remote control HAMA MCE" alt="Remote control HAMA MCE">
The IR remote control <a href="http://www.amazon.de/Hama-MCE-Remote-Control-PC-Fernbedienung/dp/B000X1EL4W/ref%3Dsr_1_1?ie%3DUTF8&amp;amp;qid%3D1363942117&amp;amp;sr%3D8-1">HAMA MCE</a> works out of the box with <a href="http://xbmc.org">XBMC</a>. Except that XBMC&rsquo;s context menu is not mapped to any key.</p>

<p>An alternative solution to the one provided here is using your smart phone or tablet as a remote control with the excellent <a href="https://play.google.com/store/apps/details?id=org.leetzone.android.yatsewidgetfree&amp;hl=en">Yatse app</a>.</p>

<h2>Setup</h2>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Raspberry_Pi">Raspberry Pi</a> with <a href="http://www.openelec.tv/">OpenELEC</a></li>
<li>Remote control: <a href="http://www.amazon.de/Hama-MCE-Remote-Control-PC-Fernbedienung/dp/B000X1EL4W/ref%3Dsr_1_1?ie%3DUTF8&amp;amp;qid%3D1363942117&amp;amp;sr%3D8-1">HAMA MCE</a> (~20EUR)</li>
</ul>


<h2>Problem</h2>

<p>Remote control does not have a key which is mapped to the context menu.</p>

<h2>For the impatient</h2>

<ul>
<li>Login to your Raspberry Pi with SSH</li>
<li>Create file <code>/storage/.xbmc/userdata/Lircmap.xml</code>.</li>
<li>Add following content:</li>
</ul>


<figure class='code'><figcaption><span>/storage/.xbmc/userdata/Lircmap.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;lircmap&gt;</span>
</span><span class='line'>      <span class="nt">&lt;remote</span> <span class="na">device=</span><span class="s">&quot;devinput&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;title&gt;</span>KEY_INFO<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/remote&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/lircmap&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Restart Raspberry Pi</li>
</ul>


<h2>Solution</h2>

<h3>File locations</h3>

<ul>
<li>OpenELEC’s system location for keymap related configs are located here: <code>/usr/share/xbmc/system/</code> (I found this information in the <a href="http://openelec.tv/forum/103-infared-remotes/37369-why-is-the-lircmap-xml-in-read-only-mode#37369">openelec forum</a>)</li>
<li>System default keymaps folder: <code>/usr/share/xbmc/system/keymaps/</code></li>
<li>System default Lircmap.xml: <code>/usr/share/xbmc/system/Lircmap.xml</code></li>
<li>Root user’s keymaps folder (empty by default): <code>/storage/.xbmc/userdata/keymaps/</code></li>
<li>Root user’s Lircmap.xml does not exist by default. It has to be created: <code>/storage/.xbmc/userdata/Lircmap.xml</code></li>
</ul>


<h3>Workflow</h3>

<h4>Get device name and name of desired button on remote control (‘irw’)</h4>

<ul>
<li>Adapted from <a href="http://wiki.openelec.tv/index.php?title=Guide_To_Test_a_Remote_and_Remap_Keys">Guide To Test a Remote and Remap Keys</a></li>
<li>Login via SSH</li>
<li>Type command <code>irw</code></li>
<li>Press the button on remote control where you would like to map the context menu (I pressed the button with the ‘right mouse click’ symbol). This will output something like:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root# irw
</span><span class='line'>17b 0 KEY_INFO devinput
</span><span class='line'>17b 0 KEY_INFO_UP devinput
</span></code></pre></td></tr></table></div></figure>


<p><code>KEY_INFO</code> is the <strong>key name</strong>, <code>devinput</code> is the <strong>device name</strong>.</p>

<p>The next sentence in the <a href="http://wiki.openelec.tv/index.php?title=Guide_To_Test_a_Remote_and_Remap_Keys">guide</a> was not clear to me (<em>userdata SMB share</em> is <code>/usr/share/xbmc/system/</code>…):</p>

<blockquote><p>Make sure you have a proper remote.xml in your keymaps folder which is inside your userdata SMB share (or located at /storage/.xbmc/userdata/keymaps/remote.xml)</p></blockquote>

<p>With OpenELEC the location of <em>userdata SMB share</em> is <code>/usr/share/xbmc/system/Lircmap.xml</code>.</p>

<h4>Get function name for context menu</h4>

<p>The function name can be read from <code>/usr/share/xbmc/system/Lircmap.xml</code>. Search for <code>ContextMenu</code>. This should look like:</p>

<figure class='code'><figcaption><span>/usr/share/xbmc/system/Lircmap.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>...
</span><span class='line'><span class="nt">&lt;title&gt;</span>ContextMenu<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>The function name for context menu is <code>title</code>.</p>

<h4>Create customized Lircmap.xml</h4>

<p>Create <code>/storage/.xbmc/userdata/Lircmap.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>nano /storage/.xbmc/userdata/Lircmap.xml
</span></code></pre></td></tr></table></div></figure>


<p>and add the following content (adapt to your needs):</p>

<figure class='code'><figcaption><span>/storage/.xbmc/userdata/Lircmap.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;lircmap&gt;</span>
</span><span class='line'>  <span class="nt">&lt;remote</span> <span class="na">device=</span><span class="s">”devinput”</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;title&gt;</span>KEY_INFO<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/remote&gt;</span>
</span><span class='line'><span class="nt">&lt;/lircmap&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That’s it. Restart Raspberry Pi and the context menu should now work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pygments and Python]]></title>
    <link href="http://draptik.github.io/blog/2013/05/24/pygments-and-python/"/>
    <updated>2013-05-24T21:11:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/05/24/pygments-and-python</id>
    <content type="html"><![CDATA[<p>Frameworks like <a href="http://octopress.org/">Octopress</a> and <a href="http://jekyllbootstrap.com/">Jekyll</a> use the Python library <a href="http://pygments.org/">Pygments</a> for syntax highlighting.</p>

<p>Currenty (2013-05-23) Pygments does not work flawlessly with Python3
(see
<a href="http://nonsenseby.me/blog/2013/04/13/arch-linux/">this post</a> and
<a href="https://github.com/tmm1/pygments.rb/issues/45">this issue on pygment&rsquo;s issue tracker</a>).</p>

<p>This is a problem because many operating systems already provide Python3 as the default python installation.</p>

<p>To circumvent this issue, I found 2 different solutions:</p>

<ol>
<li><p><strong>Rewire your system to always use python version X (i.e. 2.7) when python is called</strong>:
See <a href="http://nonsenseby.me/blog/2013/04/13/arch-linux/">this post</a> for an example solution.</p></li>
<li><p><strong>Sandbox Python installations</strong>.</p></li>
</ol>


<p>Personally I prefer the approach of having a sandbox system. This way I don&rsquo;t change the system&rsquo;s default setting. Whenever I require a different Python version I can just switch it (this is similar to the <a href="https://rvm.io/">Ruby Version Manager rvm</a>).</p>

<p><a href="http://www.wongdev.com/blog/2013/01/16/octopress-on-archlinux/">This blog post</a> explains some further details on how to install Octopress in Arch Linux.
It comes down to installing <a href="https://wiki.archlinux.org/index.php/Python_VirtualEnv#Virtualenvwrapper">python-virtualenvwrapper</a> and configuring a new custom environment <code>blog_env</code> which uses Python 2.7:</p>

<div><script src='https://gist.github.com/5638602.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>Paraphrazing the <a href="http://www.wongdev.com/blog/2013/01/16/octopress-on-archlinux/">original post</a>:</p>

<p>To switch to the newly created <code>blog_env</code>, run <code>workon blog_env</code>. To exit a virtualenv, run <code>deactivate</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IT book recommendations]]></title>
    <link href="http://draptik.github.io/blog/2012/12/15/it-book-recommendations/"/>
    <updated>2012-12-15T01:17:20+01:00</updated>
    <id>http://draptik.github.io/blog/2012/12/15/it-book-recommendations</id>
    <content type="html"><![CDATA[<p>I now have a list of IT book recommendations at <a href="https://github.com/draptik/reader/blob/master/README.md">GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I switched from Ubuntu to Arch Linux]]></title>
    <link href="http://draptik.github.io/blog/2012/10/16/why-i-switched-from-ubuntu-to-arch-linux/"/>
    <updated>2012-10-16T03:35:34+02:00</updated>
    <id>http://draptik.github.io/blog/2012/10/16/why-i-switched-from-ubuntu-to-arch-linux</id>
    <content type="html"><![CDATA[<p>Ubuntu is a great GNU/Linux distribution. I have been using it since 2004, and except for one LTS (long term support) upgrade a couple years back everything was fine. That LTS upgrade a couple years back screwed up the X system, leaving me with the bash shell. Don&rsquo;t get me wrong: I enjoy dabling with my Linux system, but an LTS upgrade should be safe.</p>

<p>Well, this was years ago.</p>

<p>After upgrading from Ubuntu 11.10 to 12.04 the same thing happened again: No X system.</p>

<p>I have a cheap Nvidia card with dual head setup (dual head means you can plug in 2 monitors). Worked fine with Ubuntu since 2009. So I upgraded to Ubuntu 12.04. And I&rsquo;m back to: No X system.</p>

<p>I was not amused.</p>

<p>It was not a hardware problem: The old OS (Ubuntu 11.10) worked fine. It was not the fault of Nvidia. I am talking about a video card for 20-50 bucks! Not one of those high-end video cards.</p>

<p>Instead of switching to another deb or rpm based system I decided to switch to one of those &ldquo;rolling&rdquo; distributions like Gentoo or Arch. I picked the later and have so far not regrated the decision.</p>

<p>Arch Linux is my home production system of choice.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Impressions during developing my first application with Mono and Gtk# (GtkSharp)]]></title>
    <link href="http://draptik.github.io/blog/2012/09/30/impressions-during-developing-my-first-application-with-mono-and-gtk-gtksharp/"/>
    <updated>2012-09-30T02:57:56+02:00</updated>
    <id>http://draptik.github.io/blog/2012/09/30/impressions-during-developing-my-first-application-with-mono-and-gtk-gtksharp</id>
    <content type="html"><![CDATA[<h2>Why Mono? Why Gtk?</h2>

<p>Over the past couple of years I have been developing C# ASP.NET enterprise applications. So I am quite comfortable with the Microsoft stack.</p>

<p>That answers the first question: Mono gives me C# and the .NET stack.</p>

<p>On the other hand I have been using linux as a desktop environment on my home machine for over a decade. I am comfortable with using linux as my primary OS.</p>

<p>That answers the second question: Mono gives me access to Gtk, the graphics library of gnome, which is the default &ldquo;desktop&rdquo; in many linux distributions.</p>

<h2>The App</h2>

<p>I want to synchronize different Git repositories semi-automatically using a Gui.</p>

<ul>
<li><p>Default behaviour of the automation can be loaded via a Json file.</p></li>
<li><p>Each entry describes a repository set to be synchronized.</p></li>
</ul>


<p>The app is located at <a href="https://github.com/draptik/RepoSync">https://github.com/draptik/RepoSync</a><a href="https://github.com/draptik/RepoSync">
</a></p>

<p>I also published a small demo application for gtk# and treeview: <a href="https://github.com/draptik/GtkSharpTreeViewDemo">https://github.com/draptik/GtkSharpTreeViewDemo</a></p>

<h2>Impressions</h2>

<h5>Monodevelop vs Visual Studio</h5>

<p>I&rsquo;ll keep it brief: If you&rsquo;re used to Visual Studio and ReSharper, Monodevelop does not come close. On the other hand Monodevelop is a full C# IDE which works with linux. And Monodevelop can be used cross-plattform.</p>

<h5>Gtk# API</h5>

<p>The Gtk# API is not your typical .NET library. You will very soon notice that the origins are C/C++. This takes some getting used to if you have a .NET background.</p>

<p>Typically there are no return values. Instead Gtk# methods very often use the &ldquo;out&rdquo; keyword in .NET because that comes closer to the C++ implementation using pointers.</p>

<p>Here is an example:</p>

<figure class='code'><figcaption><span>Mono Gtk# Code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">bool</span> <span class="n">someBool</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">listStore</span><span class="p">.</span><span class="n">GetIterFirst</span> <span class="p">(</span><span class="k">out</span> <span class="n">iter</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">someBool</span> <span class="p">=</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)</span> <span class="n">listStore</span><span class="p">.</span><span class="n">GetValue</span> <span class="p">(</span><span class="n">iter</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">someBool</span> <span class="p">&amp;&amp;</span> <span class="n">listStore</span><span class="p">.</span><span class="n">IterNext</span> <span class="p">(</span><span class="k">ref</span> <span class="n">iter</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">someBool</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Pseudo-C# Code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">return</span> <span class="n">listStore</span><span class="p">.</span><span class="n">ToList</span><span class="p">().</span><span class="n">Any</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">MyBoolProp</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the .NET side, I don&rsquo;t like the Gtk# API. I prefer methods having return values. I guess it is a matter of tast. If it would really bother me, I would write some wrappers around&hellip; ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PS1 prompt]]></title>
    <link href="http://draptik.github.io/blog/2012/08/20/ps1-prompt/"/>
    <updated>2012-08-20T23:31:20+02:00</updated>
    <id>http://draptik.github.io/blog/2012/08/20/ps1-prompt</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s my current PS1 prompt for bash with optional git support: <a href="https://gist.github.com/3324534">https://gist.github.com/3324534</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GNU/Emacs: Desktop Save with "Lazy Loading"]]></title>
    <link href="http://draptik.github.io/blog/2012/03/27/gnuemacs-desktop-save-with-lazy-loading/"/>
    <updated>2012-03-27T22:33:18+02:00</updated>
    <id>http://draptik.github.io/blog/2012/03/27/gnuemacs-desktop-save-with-lazy-loading</id>
    <content type="html"><![CDATA[<p>When using <a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html">desktop-save-mode</a> using <code>desktop-restore-eager</code> is a must:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'><span class="p">(</span><span class="nf">custom-set-variables</span>
</span><span class='line'>  <span class="o">&#39;</span><span class="p">(</span><span class="nv">desktop-save-mode</span> <span class="nv">t</span><span class="p">)</span>
</span><span class='line'>  <span class="o">&#39;</span><span class="p">(</span><span class="nv">desktop-restore-eager</span> <span class="mi">5</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>desktop-save-mode</code> will load your last session. Setting <code>desktop-restore-eager</code> to 5 will only try to load and render the last 5 buffers while loading your saved buffers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting a Mercurial repository to Git]]></title>
    <link href="http://draptik.github.io/blog/2012/02/07/converting-a-mercurial-repository-to-git/"/>
    <updated>2012-02-07T01:40:01+01:00</updated>
    <id>http://draptik.github.io/blog/2012/02/07/converting-a-mercurial-repository-to-git</id>
    <content type="html"><![CDATA[<p>Note to self:</p>

<p>Converting Hg repos to git using hg-fast-export.</p>

<p>Installation:</p>

<p><code>
$ sudo aptitude install hg-fast-export
</code></p>

<p>Usage:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>new_git_dir
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>git init
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>hg-fast-export -r &lt;hg-repo&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Works with:</p>

<p>git version 1.7.5.4</p>

<p>hg version 2.1</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting a Subversion repository to Git]]></title>
    <link href="http://draptik.github.io/blog/2012/02/07/converting-a-subversion-repository-to-git/"/>
    <updated>2012-02-07T00:10:21+01:00</updated>
    <id>http://draptik.github.io/blog/2012/02/07/converting-a-subversion-repository-to-git</id>
    <content type="html"><![CDATA[<p>Just discovered this:</p>

<p><a href="http://john.albin.net/">John Albin</a> wrote an excellent article on how to convert a <a href="http://en.wikipedia.org/wiki/Apache_Subversion">subversion</a> repository to <a href="http://en.wikipedia.org/wiki/Git_(software">git</a>):</p>

<p><a href="http://john.albin.net/git/convert-subversion-to-git">http://john.albin.net/git/convert-subversion-to-git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NHibernate 3.2 Upgrades]]></title>
    <link href="http://draptik.github.io/blog/2011/11/09/nhibernate-3-2/"/>
    <updated>2011-11-09T01:10:15+01:00</updated>
    <id>http://draptik.github.io/blog/2011/11/09/nhibernate-3-2</id>
    <content type="html"><![CDATA[<p>Trying Google Plus for blogging&hellip;
<a href="https://plus.google.com/u/0/110847643332707464429/posts/7ymoJ6ZEfj3">https://plus.google.com/u/0/110847643332707464429/posts/7ymoJ6ZEfj3</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[uNhAddIns patch for NHibernate 3.1]]></title>
    <link href="http://draptik.github.io/blog/2011/10/05/unhaddins-patch-for-nhibernate-3-1/"/>
    <updated>2011-10-05T23:07:26+02:00</updated>
    <id>http://draptik.github.io/blog/2011/10/05/unhaddins-patch-for-nhibernate-3-1</id>
    <content type="html"><![CDATA[<p>since most NuGet packages related to <a href="http://nhforge.org/Default.aspx">NHibernate</a> come with NHibernate version 3.1.0.4000 (at the time of writing), I tried rebuilding <a href="http://code.google.com/p/unhaddins/">uNhAddIns</a> (commit #773) with the newer version of NHibernate.</p>

<p>My changes:</p>

<ul>
<li><p>upgraded NHibernate to version 3.1.0.4000 (Iesi.Collections, NHibernate, NHibernate.ByteCode.Castle)</p></li>
<li><p>implemented new Interface method &lsquo;IsProxy&rsquo; for IProxyFactoryFactory (CSLProxyFactoryFactory, ProxyFactoryFactory)</p></li>
</ul>


<p>BTW: .NET is becoming more and more like Java&hellip; Who doesn&rsquo;t love names like &lsquo;IProxyFactoryFactory&rsquo;? ;&ndash;)</p>

<p>I did not update any tests.</p>

<p>Feel free to use this code (no licence).</p>

<p>My patch can be found at:</p>

<p><a href="http://unhaddins.googlecode.com/issues/attachment?aid=260000000&amp;name=unhaddins_cloned_774.patch.zip&amp;token=ef134e75687db99ec50f572023909835">Patch at Google Code</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App.Config: Order matters]]></title>
    <link href="http://draptik.github.io/blog/2011/09/24/app-config-order-matters/"/>
    <updated>2011-09-24T00:09:05+02:00</updated>
    <id>http://draptik.github.io/blog/2011/09/24/app-config-order-matters</id>
    <content type="html"><![CDATA[<p>Note to self:</p>

<p>Within an App/Web.config in .NET&hellip; The startup node must be the last node&hellip;</p>

<p>Example: Create a plain WPF application from Visual Studio 2010, add an App.Config file, and try building Option 1 and Option 2 below.</p>

<p>Option 1:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;startup&gt;&lt;supportedRuntime</span> <span class="na">version=</span><span class="s">&quot;v4.0&quot;</span> <span class="na">sku=</span><span class="s">&quot;.NETFramework,Version=v4.0&quot;</span><span class="nt">/&gt;&lt;/startup&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configSections</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This throws: <code>The type initializer for 'System.Windows.Application' threw an exception.</code></p>

<p>Option 2:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configSections</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;startup&gt;&lt;supportedRuntime</span> <span class="na">version=</span><span class="s">&quot;v4.0&quot;</span> <span class="na">sku=</span><span class="s">&quot;.NETFramework,Version=v4.0&quot;</span><span class="nt">/&gt;&lt;/startup&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fine.</p>

<p>Do I want to read 2.5MB of <code>C:\Program Files (x86)\Microsoft Visual Studio 10.0\Xml\Schemas\DotNetConfig.xsd</code>? No.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails and Emacs: Rsense and Auto-Complete]]></title>
    <link href="http://draptik.github.io/blog/2011/07/17/rails-and-emacs-rsense-and-auto-complete/"/>
    <updated>2011-07-17T06:24:23+02:00</updated>
    <id>http://draptik.github.io/blog/2011/07/17/rails-and-emacs-rsense-and-auto-complete</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re developing Rails with <a href="http://www.gnu.org/software/emacs/">Emacs</a> and using <a href="http://rinari.rubyforge.org/">Rinari</a> here are two more extensions you might like:</p>

<p><a href="http://cx4a.org/software/auto-complete/">http://cx4a.org/software/auto-complete/</a></p>

<p>and</p>

<p><a href="http://cx4a.org/software/rsense/">http://cx4a.org/software/rsense/</a></p>

<p>Installation. Just  as described. Code completion for ruby-on-rails with emacs!</p>

<p>And the package is written in Java(!), Very cool!</p>

<p>I am impressed!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Antivir regression bug makes Visual Studio 2010 unusable]]></title>
    <link href="http://draptik.github.io/blog/2011/07/09/antivir-regression-bug-makes-visual-studio-2010-unusable/"/>
    <updated>2011-07-09T03:04:48+02:00</updated>
    <id>http://draptik.github.io/blog/2011/07/09/antivir-regression-bug-makes-visual-studio-2010-unusable</id>
    <content type="html"><![CDATA[<p>The current version of <a href="http://www.avira.com/en/for-home">Antivir Personal</a> slows down Visual Studio 2010 making it unbearable to develop ASP.NET applications.</p>

<p>Debugging with active Antivir: appr. <strong>5min</strong> for an empty Default.aspx page to display.</p>

<p>Debugging with deactivated Antivir: <strong>a few seconds</strong> for an empty Default.aspx page to display.</p>

<p>Until Antivir fixes this bug I will give <a href="http://www.microsoft.com/security_essentials/default.aspx?mkt=de-de">Microsoft Security Essentials</a> a try.</p>

<p>Regression because this has been addressed and fixed in December 2010:</p>

<p><a href="http://www.avira.com/en/support-for-free-faq-detail/faqid/805">Antivir FAQ (English)</a></p>

<p><a href="http://www.avira.com/de/support-for-free-faq-detail/faqid/805">Antivir FAQ (Deutsch)</a></p>

<p>This applies to the following version of Antivir:</p>

<pre><code>Produktversion 10.2.0.696 29.06.2011
Suchengine 8.02.06.04 06.07.2011
Virendefinitionsdatei 7.11.11.27 07.07.2011
Control Center 10.00.12.31 28.06.2011
Config Center 10.00.13.20 28.06.2011
Luke Filewalker 10.03.00.07 28.06.2011
AntiVir Guard 10.00.01.59 28.06.2011
Filter 10.00.26.09 28.06.2011
AntiVir WebGuard 10.01.09.00 28.06.2011
Planer 10.00.00.21 02.05.2011
Updater 10.00.00.39 21.06.2011
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Workaround for VirtualBox 4.0.8 regression bug]]></title>
    <link href="http://draptik.github.io/blog/2011/05/25/workaround-for-virtualbox-4-0-8-regression-bug/"/>
    <updated>2011-05-25T22:35:29+02:00</updated>
    <id>http://draptik.github.io/blog/2011/05/25/workaround-for-virtualbox-4-0-8-regression-bug</id>
    <content type="html"><![CDATA[<p><del>The current version of Oracle&rsquo;s VirtualBox (4.0.8) has</del> Version 4.0.8 had a regression bug which seems to only manifest itself when using Debian based hosts with 64-bit and Windows 7 64-bit guest system.</p>

<p>Here is the summary of the workaround posted as <a href="http://www.virtualbox.org/ticket/8948">VirtualBox Ticket 8948</a>:</p>

<ol>
<li><p> Edit the settings file to allow the VM to start again (Replace control characters in line 315 with 4.0.8).</p></li>
<li><p> Start the Windows guest</p></li>
<li><p> Run <code>regedit</code></p></li>
<li><p> Go to <code>HKLM\SOFTWARE\Oracle\VirtualBox Guest Additions</code></p></li>
<li><p> Create a string key <code>VersionEx</code> (use exactly this spelling)</p></li>
<li><p> Give it a reasonable value (ie 4.0.8)</p></li>
<li><p> Shut down the VM.</p></li>
<li><p> Repeat step 1</p></li>
<li><p> Restart and shutdown windows guest again</p></li>
</ol>


<p>That&rsquo;s it.</p>

<p>Edit: This bug has been fixed in version 4.0.10 (released 2011-06-27).</p>
]]></content>
  </entry>
  
</feed>
