<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: herbstcampus2013 | draptik]]></title>
  <link href="http://draptik.github.io/blog/categories/herbstcampus2013/atom.xml" rel="self"/>
  <link href="http://draptik.github.io/"/>
  <updated>2013-09-04T00:27:58+02:00</updated>
  <id>http://draptik.github.io/</id>
  <author>
    <name><![CDATA[Patrick Drechsler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[herbstcampus 2013]]></title>
    <link href="http://draptik.github.io/blog/2013/09/03/herbstcampus-2013/"/>
    <updated>2013-09-03T22:14:00+02:00</updated>
    <id>http://draptik.github.io/blog/2013/09/03/herbstcampus-2013</id>
    <content type="html"><![CDATA[<p>The conference <a href="http://www.herbstcampus.de/hc13/">Herbstcampus 2013</a> was in German, so I&rsquo;ll write my comments in German&hellip;</p>

<h1>Day 1</h1>

<h2>Geht nicht gibt&rsquo;s nicht! Einsatz von HTML5-Features im Jetzt</h2>

<p><blockquote><p>HTML5 bietet eine Menge neuer Möglichkeiten für die Entwicklung von Web-Applikationen. Allerdings werden viele Features erst in neueren Browser-Versionen unterstützt. Dieser Vortrag zeigt anhand von Beispielen, wie HTML5-Technologien jetzt schon eingesetzt werden können, ohne ältere Browser von der Nutzung auszuschließen.</p><footer><strong>Yann Massard <a href="http://www.herbstcampus.de/hc13/program/sessions.html#27">http://www.herbstcampus.de/hc13/program/sessions.html#27</a> Einsatz von HTML5-Features im Jetzt</strong></footer></blockquote></p>

<p>Sprecher:</p>

<ul>
<li>ruhig und routiniert</li>
<li>Vortrag technisch schlecht vorbereitet: Änderungen in der virtuellen Maschine werden off-screen gemacht &mdash;> dauert merhmals mehrere Minuten, die &ldquo;in Stille&rdquo; gemacht werden. Ein absolutes NoGo!</li>
</ul>


<p>Technologien:</p>

<ul>
<li><p>Leider für mich wenig Neues.</p></li>
<li><p>Wurden eher auf dem Level für Wirtschaftsinformatiker mit geringen HTML-Kenntnissen vorgestellt.</p></li>
</ul>


<p>Fazit: Langweilig</p>

<h2>Volle Fahrt voraus! Continuous Delivery Praktisch</h2>

<p><blockquote><p>Continuous Delivery ist zur Zeit in aller Munde und in diversen Fachartikeln und Büchern wurden die zugrundeliegenden Konzepte vielfältig erläutert. Aber wie setzt man nun solche Konzepte in die Wirklichkeit um? Welche Werkzeuge sind notwendig, was muss beachtet werden? In dieser Session implementieren wir eine Continuous Delivery Build Pipeline und setzen dabei Werkzeuge wie Jenkins, Puppet und Vagrant ein.</p><footer><strong>Dr. Halil-Cem Gürsoy <a href="http://www.herbstcampus.de/hc13/program/sessions.html#43">http://www.herbstcampus.de/hc13/program/sessions.html#43</a> Continuous Delivery Praktisch</strong></footer></blockquote></p>

<p>Sprecher:</p>

<ul>
<li>Profi, manchmal etwas zu entspannt wirkend, aber dann schneidet er in einem Halbsatz wieder ein Thema an, dass mit dem Talk gar nichts zu tun hat, und man merkt ganz schnell, dass das jemand ist, der sich auf vielen Baustellen auskennt&hellip;</li>
<li>Übergang Vortrag &lt;&ndash;> LiveDemo passt.</li>
</ul>


<p>Technologien:</p>

<ul>
<li><a href="http://www.vagrantup.com/">Vagrant</a></li>
<li><a href="https://puppetlabs.com/">Puppet</a></li>
<li><a href="http://jenkins-ci.org/">Jenkins</a></li>
</ul>


<p>Fazit: Super. So sollte DevOps sein ;&ndash;)</p>

<h2>Aber eben lief das doch noch! HTML5 Testing mit Jasmine BDD</h2>

<p><blockquote><p>Mit einer HTML5-Anwendung können gleichzeitig verschiedenste klassische und mobile Plattformen erreicht werden. Doch wie testet man diese modularen Anwendungen mit hohem JavaScript-Anteil? Für den Test bietet sich Jasmine als JavaScript-basiertes Test-Framework an. Es überzeugt durch seine strikte Trennung zwischen Test-Runner und Reporter sowie durch eine einfache Integration in modulare HTML5-Anwendungen. Durch die „Behaviour Driven Development (BDD)“-Anzahl bleiben die Tests lesbar. Außerdem kann es leicht in den Entwicklungsprozess integriert werden. Neben einfachen Unit-Tests für den JavaScript-Code kann auch die Interaktion mit den HTML-Anteilen der Anwendung getestet werden. Um Tests unabhängig vom echten Backend zu schreiben, wird das Mock-Framework Sinon.JS vorgestellt. Den Abschluss bildet die Build-Automatisierung am Beispiel von Jenkins.</p><footer><strong>Alexander Schwartz <a href="http://www.herbstcampus.de/hc13/program/sessions.html#29">http://www.herbstcampus.de/hc13/program/sessions.html#29</a> Aber eben lief das doch noch!</strong></footer></blockquote></p>

<p>Sprecher:</p>

<ul>
<li>routiniert</li>
</ul>


<p>Fazit: Langweilig</p>

<h2>Echt jetzt ?! Echtzeitanwendungen für das Web mit SignalR</h2>

<p>Super.</p>

<p><blockquote><p>Die Erwartungen an moderne Web-Anwendungen haben sich inzwischen an jene klassischer Desktopapplikationen angepasst. In Zeiten sozialer Netzwerke gehören Benutzerinteraktionen, die in Echtzeit erfolgen, längst zum Standard. Doch die Mechanismen von HTTP &amp; Co sind in ihrer ursprünglichen Form hierfür nicht ausgelegt. Glücklicherweise haben sich im Laufe der Jahre zahlreiche Technologien, wie z. B. ?Web Sockets? oder ?Server-Sent Events? etabliert, die diese Schwächen ausgleichen. Mit SignalR veröffentlicht Microsoft nun eine Reihe von server- und client-seitigen Frameworks, welche die gängigsten Technologien zur Realisierung von ?Push-Notifications? abstrahieren und für die ASP.NET-Plattform zur Verfügung stellen. Dieser Vortrag führt in SignalR ein und zeigt anhand eines Beispiels, wie sich Echtzeitanwendungen einfach und schnell realisieren lassen.</p><footer><strong>Tobias Krügel <a href="http://www.herbstcampus.de/hc13/program/sessions.html#4">http://www.herbstcampus.de/hc13/program/sessions.html#4</a> Echtzeitanwendungen für das Web mit SignalR</strong></footer></blockquote></p>

<p>Fazit: Super. Geile Demo! Ich saß nur da und dachte &ldquo;für was kann ich diese coole Technologie einsetzen?&rdquo; und &ldquo;Wie cool und einfach ist SignalR doch&rdquo;&hellip;</p>
]]></content>
  </entry>
  
</feed>
