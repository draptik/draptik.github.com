<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c# on draptik</title>
    <link>https://draptik.github.io/categories/c#/</link>
    <description>Recent content in c# on draptik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 May 2016 19:25:17 +0000</lastBuildDate><atom:link href="https://draptik.github.io/categories/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing that different objects have the same properties</title>
      <link>https://draptik.github.io/posts/2016/05/09/testing-objects-have-same-properties/</link>
      <pubDate>Mon, 09 May 2016 19:25:17 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2016/05/09/testing-objects-have-same-properties/</guid>
      <description>Sometimes you want to ensure that 2 unrelated objects share a set of properties &amp;ndash; without using an interface.
Here is an example:
namespace Demo { public class Customer { public string FirstName { get; set; } public string LastName { get; set; } } public class Person { public string FirstName { get; set; } public string LastName { get; set; } } } First thought for C# developers: AutoMapper</description>
    </item>
    
    <item>
      <title>.NET backend providing REST</title>
      <link>https://draptik.github.io/posts/2014/07/18/dot-net-backend-providing-rest/</link>
      <pubDate>Fri, 18 Jul 2014 18:46:33 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2014/07/18/dot-net-backend-providing-rest/</guid>
      <description>TL;DR My AngularJS demo app has a new backend implementation using .NET Web API.
&amp;hellip; Recap Our goals:
 server side: minimal working REST API providing  GET dummy CRUD users   client side (angular): communicate with server side  Setup Creating a Web API project is straightforward: Just follow the instructions at</description>
    </item>
    
    <item>
      <title>link collection #4</title>
      <link>https://draptik.github.io/posts/2014/04/21/link-collection-number-4/</link>
      <pubDate>Mon, 21 Apr 2014 03:24:32 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2014/04/21/link-collection-number-4/</guid>
      <description>I&amp;rsquo;m a bit behind on this section, I know. Here&amp;rsquo;s the first batch:
currently reading:
 Growing Object-Oriented Software, Guided by Tests Implementing Domain-Driven Design  c# stuff:
 Mark Seemann&amp;rsquo;s on Bastard Injection foreach vs ForEach  sql stuff:</description>
    </item>
    
    <item>
      <title>link collection #3</title>
      <link>https://draptik.github.io/posts/2014/01/03/link-collection-number-3/</link>
      <pubDate>Fri, 03 Jan 2014 23:30:00 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2014/01/03/link-collection-number-3/</guid>
      <description>JavaScript stuff:
 Basics of NodeJS and ExpressJS: REST, Authentication, Sessions Another great tutorial on SPAs: Authentication in Single Page Applications If you&amp;rsquo;re in for using JavaScript for your complete stack, try MEAN: mean.</description>
    </item>
    
    <item>
      <title>ReorderList demo for AjaxControlToolkit</title>
      <link>https://draptik.github.io/posts/2013/05/30/reorderlist-demo-for-ajaxcontroltoolkit/</link>
      <pubDate>Thu, 30 May 2013 15:55:00 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2013/05/30/reorderlist-demo-for-ajaxcontroltoolkit/</guid>
      <description>AjaxControlToolkit&amp;rsquo;s ReorderList provides drag and drop functionality within a list.
&amp;lt;div class=&amp;#34;CssReorderList&amp;#34;&amp;gt; &amp;lt;!-- ClientMode=&amp;#34;AutoID&amp;#34; is required for certain versions of AjaxControlToolkit --&amp;gt; &amp;lt;ajaxToolkit:ReorderList ID=&amp;#34;MyReorderList&amp;#34; runat=&amp;#34;server&amp;#34; DataKeyField=&amp;#34;MyId&amp;#34; SortOrderField=&amp;#34;MyPosition&amp;#34; PostBackOnReorder=&amp;#34;False&amp;#34; ClientIDMode=&amp;#34;AutoID&amp;#34; DragHandleAlignment=&amp;#34;Left&amp;#34; ItemInsertLocation=&amp;#34;Beginning&amp;#34; AllowReorder=&amp;#34;true&amp;#34; &amp;gt; &amp;lt;ItemTemplate&amp;gt; &amp;lt;div style=&amp;#34;background-color: yellow;&amp;#34; class=&amp;#34;CssItemArea&amp;#34;&amp;gt; &amp;lt;asp:HiddenField runat=&amp;#34;server&amp;#34; ID=&amp;#34;hdfMyId&amp;#34; Value=&amp;#34;&amp;lt;%# ((DummyViewModel)Container.</description>
    </item>
    
  </channel>
</rss>
