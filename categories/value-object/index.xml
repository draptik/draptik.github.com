<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>value object on draptik</title>
    <link>https://draptik.github.io/categories/value-object/</link>
    <description>Recent content in value object on draptik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2020 22:20:01 +0100</lastBuildDate><atom:link href="https://draptik.github.io/categories/value-object/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>F# Smart Constructor</title>
      <link>https://draptik.github.io/posts/2020/02/10/fsharp-smart-constructor/</link>
      <pubDate>Mon, 10 Feb 2020 22:20:01 +0100</pubDate>
      
      <guid>https://draptik.github.io/posts/2020/02/10/fsharp-smart-constructor/</guid>
      <description>The &amp;ldquo;Smart Constructor&amp;rdquo; pattern allows us to create a type with F#. With validation.
TL/DR Here is the F# boiler plate needed to implement the Value Object pattern.
type UserName = private UserName of string module UserName = let isValid s = // .</description>
    </item>
    
  </channel>
</rss>
