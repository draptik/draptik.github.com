<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xunit on draptik</title>
    <link>https://draptik.github.io/categories/xunit/</link>
    <description>Recent content in xunit on draptik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jan 2022 16:56:10 +0000</lastBuildDate><atom:link href="https://draptik.github.io/categories/xunit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parameterized xUnit Tests with F#</title>
      <link>https://draptik.github.io/posts/2022/01/12/fsharp-writing-parameterized-xunit-tests/</link>
      <pubDate>Wed, 12 Jan 2022 16:56:10 +0000</pubDate>
      
      <guid>https://draptik.github.io/posts/2022/01/12/fsharp-writing-parameterized-xunit-tests/</guid>
      <description>This post showcases different ways of writing parameterized tests with xUnit using F#.
I&amp;rsquo;m assuming you
 have a basic knowledge of F# are familiar with the concept of parameterized tests are familiar with parameterized tests with C#/xUnit  TL/DR type Somebody = { Name : string } let samplesTLDR : obj[] list = [ [| { Name = &amp;#34;Homer&amp;#34; }; &amp;#34;Homer&amp;#34; |] [| { Name = &amp;#34;Marge&amp;#34; }; &amp;#34;Marge&amp;#34; |] ] [&amp;lt;Theory&amp;gt;] [&amp;lt;MemberData(nameof(samplesTLDR))&amp;gt;] let ``test TLDR`` someBody expected = Assert.</description>
    </item>
    
  </channel>
</rss>
